name: "Helm Unit Tests"
description: "Run Helm chart unit tests with quintush/helm-unittest"

branding:
  icon: check-square
  color: green

inputs:
  flags:
    description: "Flags to pass to helm unittest"
    required: false
    default: "--color"

  charts:
    description: "Charts to run tests for, separated by spaces"
    required: false
    default: ""

  install-mode:
    description: >-
      Whether to force install helm-unittest ("force"), try a simple install
      (empty) or skip if the plugin is present ("if-not-present")
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Install Helm
      run: |
        installScript=https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        curl "$installScript" 2>/dev/null | bash >/dev/null
      shell: bash

    - name: Uninstall helm-unittest if present
      if: inputs.install-mode == 'force'
      run: |
        helm plugin uninstall unittest >/dev/null 2>/dev/null \
          || echo "Failed to uninstall plugin, assuming it's not present."
      shell: bash

    - name: Install helm-unittest
      run: |
        if helm plugin list | sed 1d | awk '{print $1}' | grep -q '^unittest$'; then
          if [ "${{ inputs.install-mode }}" == "if-not-present" ]; then
            echo "Plugin already installed, skipping installation step."
          elif [ "${{ inputs.install-mode }}" != "force" ]; then
            echo "Plugin already installed, aborting."
            exit 1
          fi
        fi

        helm plugin install https://github.com/helm-unittest/helm-unittest >/dev/null 2>/dev/null
      shell: bash

    - name: Assemble list of chart directories to test
      run: |
        tr ' ' '\n' <<< "${{ inputs.charts }}" | grep -v '^$' > charts-to-test || true
        find . -type f -name 'Chart.yaml' -exec dirname {} \; > all-charts
        [ -z "${{ inputs.charts }}" ] && mv all-charts charts-to-test || true
      shell: bash

    - name: Fetch chart dependencies
      run: |
        for chart in $(cat charts-to-test); do
          helm dependency update "$chart" >/dev/null
        done
      shell: bash

    - name: Run unit tests
      run: helm unittest ${{ inputs.flags }} $(cat charts-to-test)
      shell: bash
